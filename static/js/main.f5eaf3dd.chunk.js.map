{"version":3,"sources":["components/Slice.js","components/Row.js","components/Grid.js","components/Options.js","settings/consts.js","settings/last.js","settings/Algorithms.js","App.js","registerServiceWorker.js","index.js"],"names":["Slice","props","className","showProps","blocked","start","end","dead","border","solution","id","xLines","yLines","onClick","tracksLine","Row","j","slices","gridSize","push","key","Grid","i","rows","this","boardState","length","Component","styles","spl","fontSize","backgroundColor","mztxt","marginBottom","Options","style","Button","variant","random","onChange","pickType","value","type","color","solveing","near","Defaultapp","searchType","activated","searchEdge","last","ary","aStar","list1","list2","value1","value2","greeedy","App","state","generatemaze","bind","solve","searchStep","checksolving","setTimeout","event","lines","target","split","board","prev","setState","time","interval","setInterval","tile","targetTile","el","adj","clearInterval","alert","pop","shift","validTile","concat","sort","size","Array","parseInt","Math","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f5eaf3dd.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Slice(props) {\n  return(\n    <div className={`slice blocked--${props.showProps.blocked}\n                    start--${props.showProps.start}\n                    end--${props.showProps.end}\n                    dead--${props.showProps.dead}\n                    border--${props.showProps.border}\n                    tracksol--${props.showProps.solution}`}\n                    id={[props.xLines, props.yLines]}\n                    onClick={props.tracksLine}> </div>\n  );\n} \n\nexport default Slice;\n","import React from 'react';\nimport Slice from './Slice';\n\nfunction Row(props) {\n    let j = 0;\n    let slices = [];\n\n    while (j < props.gridSize){\n      slices.push(<Slice\n        key={j}\n        showProps={props.slices[j]}\n        tracksLine={props.tracksLine}\n        xLines={props.xLines}\n        yLines={j}/>);\n      j++;\n    } \n\n    return(\n      <div className=\"row\">{slices}</div>\n    );\n}\n\nexport default Row;\n","import React, { Component } from 'react';\nimport Row from './Row';\n\nclass Grid extends Component {\n\n\n  render(){\n    let i = 0;\n    let rows = [];\n    while (i < this.props.boardState.length) {\n      rows.push(<Row\n        key={i}\n        gridSize={this.props.boardState[i].length}\n        slices={this.props.boardState[i]}\n        tracksLine={this.props.tracksLine}\n        xLines={i}\n\n        />);\n      i++;\n    }\n\n    return(\n      <div className=\"grid\">\n        {rows}\n      </div>\n    );\n  }\n}\n\nexport default Grid;\n","\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\n\nfunction Options(props) {\n  return (\n    <div>\n      <text style={styles.mztxt}>MaZe</text>\n        <div className=\"control__panel\">\n          <Button variant=\"contained\" onClick={props.random}> Reset </Button>\n            <div>\n              <select style={styles.spl} onChange={props.pickType} value={props.type}>\n                <option value=\"DFS\">DFS جستجو عمقی </option>\n                <option value=\"BFS\">BFS جستجو سطری </option>\n                <option value=\"Greedy\">Greedy جستجو حریصانه</option>\n                <option value=\"A*\">A* </option>\n              </select>\n            </div>\n          <Button variant=\"contained\" color=\"primary\" onClick={props.solveing}> Start </Button>\n      </div>\n    </div>\n  );\n}\n\nconst styles={\n  spl:{\n    fontSize:20,\n    backgroundColor:\"#F1F1F1\"\n  },\n  mztxt:{\n    fontSize:25,\n    marginBottom:100\n  }\n}\n\n\nexport default Options;\n\n","export const def_slice = ()=>{\n  return {\n    blocked: false,\n    dead: false\n  };\n};\n\nexport const slice = () => {  \n  return {\n    blocked: true,\n    dead: false\n  };\n};\n\nexport const Start = () => {\n  return {\n    blocked: false,\n    start: true,\n    dead: false\n  };\n};\n\nexport const End = () => {\n  return {\n    blocked: false,\n    end: true,\n    dead: false\n  };\n};\n\nexport const near = [\n  [0,-1],\n  [0,1],\n  [1,0],\n  [-1,0]\n];\n\nexport const Defaultapp = {\n  searchType: \"DFS\",\n  gridSize: [16, 32],\n  activated: false,\n  boardState: [[]],\n  searchEdge: [[[0,0]]]\n};\n","export const last = function(ary){\n  return ary[ary.length - 1];\n};\n\n\n\nexport default last;","import last from './last';\n\nexport const aStar = function(list1, list2){\n  let value1 = last(list1)[0] + last(list1)[1] - list1.length;\n  let value2 = last(list2)[0] + last(list2)[1] - list2.length;\n  if(value1 > value2){return -1;}\n  if(value2 > value1){return 1;}\n  if(list1.length > list2.length){return 1;}\n  if(list2.length > list1.length){return -1;}\n  return 0;\n};\n\nexport const greeedy = function(list1, list2){\n  let value1 = last(list1)[0] + last(list1)[1];\n  let value2 = last(list2)[0] + last(list2)[1];\n  if(value1 > value2){return -1;}\n  if(value2 > value1){return 1;}\n  return 0;\n};\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport Grid from './components/Grid';\nimport Options from './components/Options';\nimport {\n  def_slice,\n  Start,\n  End,\n  slice,\n  near,\n  Defaultapp} from './settings/consts';\nimport { aStar,greeedy } from './settings/Algorithms';\nimport {last} from './settings/last';\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = Defaultapp;\n    this.generatemaze = this.generatemaze.bind(this);\n    this.random = this.random.bind(this);\n    this.solve = this.solve.bind(this);\n    this.solveing = this.solveing.bind(this);\n    this.searchStep = this.searchStep.bind(this);\n    this.pickType = this.pickType.bind(this);\n    this.tracksLine = this.tracksLine.bind(this);\n    this.checksolving = this.checksolving.bind(this);\n    setTimeout(this.random,0);\n  }\n\n  tracksLine(event){\n    let lines = event.target.id.split(\",\");\n    let board = this.state.boardState;\n    let prev = board[lines[0]][lines[1]].blocked;\n    if(prev){\n      board[lines[0]][lines[1]].blocked = false;\n    }else{\n      board[lines[0]][lines[1]].blocked = true;\n    }\n    this.setState({boardState: board});\n  }\n\n  pickType(event){\n    this.setState({searchType: event.target.value});\n  }\n\n  \n\n  solveing(){\n    this.solve(30);\n  }\n\n  solve(time){\n    if (this.state.activated === true) return;\n    this.setState({activated: true});\n    this.interval = setInterval(this.searchStep, time);\n  }\n\n  validTile(tile, boardState){\n    if(tile[0] < 0 || tile[0] >= this.state.gridSize[0]){\n      return false;\n    }\n    if(tile[1] < 0 || tile[1] >= this.state.gridSize[1]){\n      return false;\n    }\n    let targetTile = boardState[tile[0]][tile[1]];\n    if(targetTile.dead || targetTile.blocked || targetTile.border){\n      return false;\n    }\n    return true;\n  }\n   \n\n  checksolving(el, adj, border, boardState){\n    if (boardState[adj[0]][adj[1]].end === true){\n      for (let j = 0; j < el.length; j++) {\n        boardState[el[j][0]][el[j][1]].solution = true;\n      }\n      boardState[adj[0]][adj[1]].solution = true;\n      clearInterval(this.interval);\n      this.setState({searchEdge: border, boardState: boardState});\n      setTimeout( ()=>{alert(\"Maze is solved!\");} , 100);\n      return true;\n    }\n    return false;\n  }\n\n  searchStep(){\n    let border = this.state.searchEdge;\n    if (border.length === 0){\n      clearInterval(this.interval);\n      alert(\"Maze is impossible!\");\n      return;\n    }\n\n    let boardState = this.state.boardState;\n    let el;\n    if(this.state.searchType === \"DFS\"){\n      el = border.pop();\n    } else {\n      el = border.shift();\n    }\n    boardState[last(el)[0]][last(el)[1]].dead = true;\n    for (let i = 0; i < near.length; i++) {\n      let adj = near[i];\n      adj = [last(el)[0]+adj[0],last(el)[1]+adj[1]];\n      if (this.validTile(adj, boardState)){\n        boardState[adj[0]][adj[1]].border = true;\n        border.push(el.concat([adj]));\n        if(this.checksolving(el, adj, border, boardState)) {return;}\n      }\n    }\n    if(this.state.searchType === \"A*\") {\n      border = border.sort(aStar);\n    }\n    if(this.state.searchType === \"Greedy\") {\n      border = border.sort(greeedy);\n    }\n    this.setState({searchEdge: border, boardState: boardState});\n  }\n  \n\n  random() {\n    clearInterval(this.interval);\n    this.setState({\n      activated: false,\n      boardState: this.generatemaze('random'),\n      searchEdge: [[[0,0]]]\n    });\n  }\n\n  generatemaze(type) {\n    let size = this.state.gridSize;\n    let ary = new Array(size[0]);\n    for (let i = 0; i < ary.length; i++) {\n      ary[i] = new Array(size[1]);\n      for (let j = 0; j < ary[i].length; j++) {\n        if (type === 'clear') {\n          ary[i][j] = def_slice();\n        } else {\n          if ((parseInt(Math.random() * 4) < 1) && (i > 1 || j > 1)) {\n            ary[i][j] = slice();\n          } else {\n            ary[i][j] = def_slice();\n          }\n        }\n      }\n    }\n    ary[0][0] = Start();\n    ary[size[0] - 1][size[1] - 1] = End();\n    return ary;\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <Grid gridSize={this.state.gridSize}\n          boardState={this.state.boardState}\n          tracksLine={this.tracksLine}/>\n        <Options\n          pickType={this.pickType}\n          type={this.state.searchType}\n          random={this.random}\n          solveing={this.solveing}\n\n          />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}